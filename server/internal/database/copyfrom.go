// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: copyfrom.go

package database

import (
	"context"
)

// iteratorForCreateFlashcards implements pgx.CopyFromSource.
type iteratorForCreateFlashcards struct {
	rows                 []CreateFlashcardsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateFlashcards) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateFlashcards) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].SetID,
		r.rows[0].Front,
		r.rows[0].Back,
	}, nil
}

func (r iteratorForCreateFlashcards) Err() error {
	return nil
}

func (q *Queries) CreateFlashcards(ctx context.Context, arg []CreateFlashcardsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"flashcards"}, []string{"set_id", "front", "back"}, &iteratorForCreateFlashcards{rows: arg})
}
